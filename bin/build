#!/usr/bin/env node

// Native
import path from 'path'

// Packages
import args from 'args'
import chalk from 'chalk'
import chokidar from 'chokidar'
import walk from 'walk'
import ncp from 'ncp'
import broccoli from 'broccoli'
import fs from 'fs-extra'

// Ours
import config from '../lib/config'
import {isSite, exists} from '../lib/etc'
import {compile} from '../lib/compiler'

args.option('watch', 'Rebuild site if files change')
const options = args.parse(process.argv)

if (!isSite()) {
  console.error(chalk.red('No site in here!'))
  process.exit(1)
}

const tmpDir = path.join(process.cwd(), 'tmp')

// Make sure that the temporary directory is clean
if (exists(tmpDir)) {
  fs.removeSync(tmpDir)
}

// Delete output directory before rebuilding
if (exists(config.outputDir)) {
  fs.removeSync(config.outputDir)
}

const timerStart = new Date().getTime()

const walker = walk.walk(process.cwd(), {
  filters: [
    /\b(layouts)\b/,
    /\b(dist)\b/,
    /\b(tmp)\b/,
    /\b(node_modules)\b/,
    path.parse(config.assetDir).base
  ]
})

walker.on('file', (root, fileStat, next) => {
  const ignored = [
    'package.json',
    'config.json',
    'brocfile.js',
    'README.md'
  ]

  if (root.includes('/.git/') || root.includes('/.git')) {
    return next()
  }

  if (ignored.indexOf(fileStat.name) > -1 || fileStat.name.charAt(0) === '.') {
    return next()
  }

  // You can't reference a object property within itself
  // So it's better to do it like this
  const paths = new function () {
    this.full = path.resolve(root, fileStat.name)
    this.relative = this.full.replace(process.cwd(), '').replace('scss', 'css')
  }

  compile(paths, () => next())
})

walker.on('end', () => {
  const timerEnd = new Date().getTime()
  const initialBuild = parseInt(timerEnd - timerStart, 10) * 1000000

  const tree = broccoli.loadBrocfile()
  const builder = new broccoli.Builder(tree)

  builder.build().then(results => {
    const dir = typeof results === 'string' ? results : results.directory
    let buildTime = results.totalTime

    // Copy files from tmp folder to the destination directory
    // And make sure to follow symlinks while doing so
    ncp(dir, config.outputDir + '/assets', {dereference: true}, err => {
      if (err) {
        throw err
      }

      if (buildTime) {
        // The original built time is in nanoseconds, so we need to convert it to milliseconds
        buildTime += initialBuild
        console.log(chalk.green(`Finished building after ${Math.floor(buildTime / 1e6)}ms.`))
      } else {
        console.log(chalk.green('Finished building.'))
      }

      if (!options.watch) {
        builder.cleanup().catch(err => console.error(err))
      }
    })
  }).catch(err => console.error(err))

  if (options.watch) {
    const watcher = chokidar.watch(process.cwd(), {
      ignored: /dist|.DS_Store|.git/
    })

    console.log('Watching for changes...')

    process.on('SIGINT', () => {
      watcher.close()
      process.exit(0)
    })

    watcher.on('change', file => {
      require('../lib/watch')('change', file)
    })
  }
})
